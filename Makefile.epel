#
# Build mock and local RPM versions of tools for Samba
#

# Assure that sorting is case sensitive
LANG=C

#
MOCKS+=centos+epel-7-x86_64
MOCKS+=centos-stream+epel-8-x86_64
MOCKS+=centos-stream+epel-9-x86_64
MOCKS+=fedora-36-x86_64

#REPOBASEDIR=/var/www/linux/mockrepo
REPOBASEDIR:=`/bin/pwd`/../mockrepo

# Deduce local package names and .spec files, for universe Makefile use
SPEC := `ls *.spec | head -1`

# Needed for yum repo updates
all:: $(MOCKS)

# Get any tarballs as describe by .spec
getsrc:
	spectool -g $(SPEC)

srpm:: src.rpm

#.PHONY:: src.rpm
src.rpm:: Makefile
	@rm -rf rpmbuild
	@rm -f $@
	@echo "Building SRPM with $(SPEC)"
	rpmbuild --define '_topdir $(PWD)/rpmbuild' \
		--define '_sourcedir $(PWD)' \
		-bs $(SPEC) --nodeps
	mv rpmbuild/SRPMS/*.src.rpm src.rpm

.PHONY: build
build:: src.rpm
	rpmbuild --define '_topdir $(PWD)/rpmbuild' \
		--rebuild $?

.PHONY: $(MOCKS)
$(MOCKS)::
	@if [ -e $@ -a -n "`find $@ -name \*.rpm`" ]; then \
		echo "	Skipping RPM populated $@"; \
	else \
		echo "Actally building $? in $@"; \
		rm -rf $@; \
		mock -q -r $(PWD)/../$@.cfg \
		    --sources $(PWD) --spec $(SPEC) \
		    --resultdir=$(PWD)/$@; \
	fi

mock:: $(MOCKS)

mock:: $(MOCKS)

install:: $(MOCKS)
	@for repo in $(MOCKS); do \
	    echo Installing $$repo; \
	    case $$repo in \
		*-7-x86_64) yumrelease=el/7; yumarch=x86_64; ;; \
		*-8-x86_64) yumrelease=el/8; yumarch=x86_64; ;; \
		*-9-x86_64) yumrelease=el/9; yumarch=x86_64; ;; \
		*-36-x86_64) yumrelease=fedora/36; yumarch=x86_64; ;; \
		*-f36-x86_64) yumrelease=fedora/36; yumarch=x86_64; ;; \
		*) echo "Unrecognized release for $$repo, exiting" >&2; exit 1; ;; \
	    esac; \
	    rpmdir=$(REPOBASEDIR)/$$yumrelease/$$yumarch; \
	    srpmdir=$(REPOBASEDIR)/$$yumrelease/SRPMS; \
	    echo "	Pusning SRPMS to $$srpmdir"; \
	    rsync $(RSYNCSAFEOPTS) $$repo/*.src.rpm $$srpmdir/. || exit 1; \
	    createrepo_c -q $$srpmdir/.; \
	    echo "	Pushing RPMS to $$rpmdir"; \
	    rsync $(RSYNCSAFEOPTS) --exclude=*.src.rpm --exclude=*debuginfo*.rpm $$repo/*.rpm $$rpmdir/. || exit 1; \
	    createrepo_c -q $$rpmdir/.; \
	done

clean::
	rm -rf $(MOCKS)
	rm -rf rpmbuild
	rm -rf */
	rm -f *.rpm
	rm -f *~
	rm -f *.out

realclean distclean:: clean
